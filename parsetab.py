
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ApareceTortuga Avanza Azar BajaLapiz Borrapantalla Cuenta Division EQUALS Elegir Elemento FLOAT GiraDerecha GiraIzquierda INT Inc Inic LeftSquareBracket Menos NAME OcultaTortuga PonRumbo PonX PonXY PonY Potencia Pri Producto RC Resto Retrocede RightSquareBracket Rumbo Sen Space SubeLapiz Suma Ultimo Var\n    statement : Var Space NAME Space EQUALS Space expression\n    statement : Inic Space NAME Space EQUALS Space expression\n                 | Inic Space NAME Space EQUALS Space function\n                 \n    statement : Var Space NAME\n    \n    statement : expression\n    expression : INT\n                  | FLOAT\n                  | function\n    expression : NAME\n    operaciones : expression Space expression\n                | expression Space operaciones\n                \n    function : Suma Space operaciones\n    \n    function : Inc Space NAME\n    \n    function : Inc Space NAME Space expression\n    function : Azar Space expression\n    function : Producto Space operaciones\n    function :  Potencia Space expression Space expressionfunction :  Division Space expression Space expressionfunction :  Resto Space expression Space expressionfunction :  RC Space expressionfunction :  Sen Space expressionfunction : Elegir Space LeftSquareBracket operaciones RightSquareBracket\n    function : Avanza Space expression\n             | Avanza Space function\n    \n    function : Retrocede Space expression\n             | Retrocede Space function\n    \n    function : GiraDerecha Space expression\n    \n    function : GiraIzquierda Space expression\n    \n    function : OcultaTortuga\n    \n    function : ApareceTortuga\n    \n    function : PonXY Space LeftSquareBracket expression Space expression RightSquareBracket\n    \n    function : PonRumbo Space expression\n    \n    function : Rumbo\n    \n    function : PonX Space expression\n    \n    function : PonY Space expression\n    \n    function : BajaLapiz\n    \n    function : SubeLapiz\n    function :  Borrapantalla'
    
_lr_action_items = {'Var':([0,],[2,]),'Inic':([0,],[5,]),'INT':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'FLOAT':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'NAME':([0,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[3,53,54,3,57,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'Suma':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'Inc':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'Azar':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'Producto':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'Potencia':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'Division':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'Resto':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'RC':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'Sen':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'Elegir':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'Avanza':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'Retrocede':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'GiraDerecha':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'GiraIzquierda':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'OcultaTortuga':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'ApareceTortuga':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'PonXY':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'PonRumbo':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'Rumbo':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'PonX':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'PonY':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'BajaLapiz':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'SubeLapiz':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'Borrapantalla':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'$end':([1,3,4,6,7,8,23,24,27,30,31,32,53,55,57,58,59,63,64,66,67,68,69,70,71,73,74,75,87,88,89,90,91,92,93,98,99,100,101,],[0,-9,-5,-8,-6,-7,-29,-30,-33,-36,-37,-38,-4,-12,-13,-15,-16,-20,-21,-23,-8,-25,-8,-27,-28,-32,-34,-35,-10,-11,-14,-17,-18,-19,-22,-1,-2,-3,-31,]),'Space':([2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,73,74,75,84,85,86,87,88,89,90,91,92,93,101,],[33,-9,34,-8,-6,-7,35,36,37,38,39,40,41,42,43,44,45,46,47,48,-29,-30,49,50,-33,51,52,-36,-37,-38,76,77,-12,78,79,-15,-16,80,81,82,-20,-21,-23,-8,-25,-8,-27,-28,-32,-34,-35,94,95,96,78,-11,-14,-17,-18,-19,-22,-31,]),'RightSquareBracket':([3,6,7,8,23,24,27,30,31,32,55,57,58,59,63,64,66,67,68,69,70,71,73,74,75,83,87,88,89,90,91,92,93,97,101,],[-9,-8,-6,-7,-29,-30,-33,-36,-37,-38,-12,-13,-15,-16,-20,-21,-23,-8,-25,-8,-27,-28,-32,-34,-35,93,-10,-11,-14,-17,-18,-19,-22,101,-31,]),'LeftSquareBracket':([44,49,],[65,72,]),'EQUALS':([76,77,],[85,86,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[4,56,58,56,60,61,62,63,64,66,68,70,71,73,74,75,56,84,87,89,90,91,92,97,98,99,]),'function':([0,35,37,38,39,40,41,42,43,45,46,47,48,50,51,52,65,72,78,79,80,81,82,94,95,96,],[6,6,6,6,6,6,6,6,6,67,69,6,6,6,6,6,6,6,6,6,6,6,6,6,6,100,]),'operaciones':([35,38,65,78,],[55,59,83,88,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> Var Space NAME Space EQUALS Space expression','statement',7,'p_statement_create','compYacc.py',12),
  ('statement -> Inic Space NAME Space EQUALS Space expression','statement',7,'p_statement_assign','compYacc.py',22),
  ('statement -> Inic Space NAME Space EQUALS Space function','statement',7,'p_statement_assign','compYacc.py',23),
  ('statement -> Var Space NAME','statement',3,'p_statement_create_empty','compYacc.py',33),
  ('statement -> expression','statement',1,'p_statement_expr','compYacc.py',42),
  ('expression -> INT','expression',1,'p_expression_Number','compYacc.py',49),
  ('expression -> FLOAT','expression',1,'p_expression_Number','compYacc.py',50),
  ('expression -> function','expression',1,'p_expression_Number','compYacc.py',51),
  ('expression -> NAME','expression',1,'p_expression_name','compYacc.py',57),
  ('operaciones -> expression Space expression','operaciones',3,'p_operaciones','compYacc.py',67),
  ('operaciones -> expression Space operaciones','operaciones',3,'p_operaciones','compYacc.py',68),
  ('function -> Suma Space operaciones','function',3,'p_suma','compYacc.py',82),
  ('function -> Inc Space NAME','function',3,'p_Incrementar','compYacc.py',89),
  ('function -> Inc Space NAME Space expression','function',5,'p_Incrementar_Num','compYacc.py',96),
  ('function -> Azar Space expression','function',3,'p_Azar','compYacc.py',103),
  ('function -> Producto Space operaciones','function',3,'p_producto','compYacc.py',123),
  ('function -> Potencia Space expression Space expression','function',5,'p_Menos','compYacc.py',129),
  ('function -> Division Space expression Space expression','function',5,'p_Division','compYacc.py',134),
  ('function -> Resto Space expression Space expression','function',5,'p_Resto','compYacc.py',140),
  ('function -> RC Space expression','function',3,'p_RC','compYacc.py',145),
  ('function -> Sen Space expression','function',3,'p_Sen','compYacc.py',150),
  ('function -> Elegir Space LeftSquareBracket operaciones RightSquareBracket','function',5,'p_Elegir','compYacc.py',162),
  ('function -> Avanza Space expression','function',3,'p_Avanza','compYacc.py',169),
  ('function -> Avanza Space function','function',3,'p_Avanza','compYacc.py',170),
  ('function -> Retrocede Space expression','function',3,'p_Retrocede','compYacc.py',177),
  ('function -> Retrocede Space function','function',3,'p_Retrocede','compYacc.py',178),
  ('function -> GiraDerecha Space expression','function',3,'p_GiraDerecha','compYacc.py',185),
  ('function -> GiraIzquierda Space expression','function',3,'p_GiraIzquierda','compYacc.py',192),
  ('function -> OcultaTortuga','function',1,'p_OcultaTortuga','compYacc.py',199),
  ('function -> ApareceTortuga','function',1,'p_ApareceTortuga','compYacc.py',205),
  ('function -> PonXY Space LeftSquareBracket expression Space expression RightSquareBracket','function',7,'p_PonXY','compYacc.py',211),
  ('function -> PonRumbo Space expression','function',3,'p_PonRumbo','compYacc.py',218),
  ('function -> Rumbo','function',1,'p_Rumbo','compYacc.py',225),
  ('function -> PonX Space expression','function',3,'p_PonX','compYacc.py',231),
  ('function -> PonY Space expression','function',3,'p_PonY','compYacc.py',238),
  ('function -> BajaLapiz','function',1,'p_BajaLapiz','compYacc.py',245),
  ('function -> SubeLapiz','function',1,'p_SubeLapiz','compYacc.py',251),
  ('function -> Borrapantalla','function',1,'p_Borrapantalla','compYacc.py',256),
]
