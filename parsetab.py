
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'Azar Borrapantalla Cuenta Division EQUALS Elegir Elemento FLOAT INT Inc Inic LeftSquareBracket Menos NAME Potencia Pri Producto RC Resto RightSquareBracket Sen Space Suma Ultimo Var\n    statement : Var Space NAME Space EQUALS Space expression\n    statement : Inic Space NAME Space EQUALS Space expression\n                 | Inic Space NAME Space EQUALS Space function\n                 \n    statement : Var Space NAME\n    \n    statement : expression\n    expression : INT\n                  | FLOAT\n                  | function\n    expression : NAME\n    operaciones : expression Space expression\n                | expression Space operaciones\n                \n    function : Suma Space operaciones\n    \n    function : Inc Space NAME\n    \n    function : Inc Space NAME Space expression\n    function : Azar Space expressionfunction : Producto Space operaciones\n                function :  Potencia Space expression Space expressionfunction :  Division Space expression Space expressionfunction :  Resto Space expression Space expressionfunction :  RC Space expressionfunction :  Sen Space expressionfunction : Elegir Space LeftSquareBracket operaciones RightSquareBracketfunction :  Borrapantalla'
    
_lr_action_items = {'Var':([0,],[2,]),'Inic':([0,],[5,]),'INT':([0,22,24,25,26,27,28,29,30,44,47,48,49,50,51,62,63,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'FLOAT':([0,22,24,25,26,27,28,29,30,44,47,48,49,50,51,62,63,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'NAME':([0,20,21,22,23,24,25,26,27,28,29,30,44,47,48,49,50,51,62,63,],[3,32,33,3,36,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'Suma':([0,22,24,25,26,27,28,29,30,44,47,48,49,50,51,62,63,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'Inc':([0,22,24,25,26,27,28,29,30,44,47,48,49,50,51,62,63,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'Azar':([0,22,24,25,26,27,28,29,30,44,47,48,49,50,51,62,63,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'Producto':([0,22,24,25,26,27,28,29,30,44,47,48,49,50,51,62,63,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'Potencia':([0,22,24,25,26,27,28,29,30,44,47,48,49,50,51,62,63,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'Division':([0,22,24,25,26,27,28,29,30,44,47,48,49,50,51,62,63,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'Resto':([0,22,24,25,26,27,28,29,30,44,47,48,49,50,51,62,63,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'RC':([0,22,24,25,26,27,28,29,30,44,47,48,49,50,51,62,63,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'Sen':([0,22,24,25,26,27,28,29,30,44,47,48,49,50,51,62,63,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'Elegir':([0,22,24,25,26,27,28,29,30,44,47,48,49,50,51,62,63,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'Borrapantalla':([0,22,24,25,26,27,28,29,30,44,47,48,49,50,51,62,63,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'$end':([1,3,4,6,7,8,19,32,34,36,37,38,42,43,55,56,57,58,59,60,61,64,65,66,],[0,-9,-5,-8,-6,-7,-23,-4,-12,-13,-15,-16,-20,-21,-10,-11,-14,-17,-18,-19,-22,-1,-2,-3,]),'Space':([2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,32,33,34,35,36,37,38,39,40,41,42,43,53,54,55,56,57,58,59,60,61,],[20,-9,21,-8,-6,-7,22,23,24,25,26,27,28,29,30,31,-23,45,46,-12,47,48,-15,-16,49,50,51,-20,-21,62,63,47,-11,-14,-17,-18,-19,-22,]),'RightSquareBracket':([3,6,7,8,19,34,36,37,38,42,43,52,55,56,57,58,59,60,61,],[-9,-8,-6,-7,-23,-12,-13,-15,-16,-20,-21,61,-10,-11,-14,-17,-18,-19,-22,]),'LeftSquareBracket':([31,],[44,]),'EQUALS':([45,46,],[53,54,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,22,24,25,26,27,28,29,30,44,47,48,49,50,51,62,63,],[4,35,37,35,39,40,41,42,43,35,55,57,58,59,60,64,65,]),'function':([0,22,24,25,26,27,28,29,30,44,47,48,49,50,51,62,63,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,66,]),'operaciones':([22,25,44,47,],[34,38,52,56,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> Var Space NAME Space EQUALS Space expression','statement',7,'p_statement_create','compYacc.py',12),
  ('statement -> Inic Space NAME Space EQUALS Space expression','statement',7,'p_statement_assign','compYacc.py',22),
  ('statement -> Inic Space NAME Space EQUALS Space function','statement',7,'p_statement_assign','compYacc.py',23),
  ('statement -> Var Space NAME','statement',3,'p_statement_create_empty','compYacc.py',34),
  ('statement -> expression','statement',1,'p_statement_expr','compYacc.py',43),
  ('expression -> INT','expression',1,'p_expression_Number','compYacc.py',50),
  ('expression -> FLOAT','expression',1,'p_expression_Number','compYacc.py',51),
  ('expression -> function','expression',1,'p_expression_Number','compYacc.py',52),
  ('expression -> NAME','expression',1,'p_expression_name','compYacc.py',58),
  ('operaciones -> expression Space expression','operaciones',3,'p_operaciones','compYacc.py',68),
  ('operaciones -> expression Space operaciones','operaciones',3,'p_operaciones','compYacc.py',69),
  ('function -> Suma Space operaciones','function',3,'p_suma','compYacc.py',83),
  ('function -> Inc Space NAME','function',3,'p_Incrementar','compYacc.py',90),
  ('function -> Inc Space NAME Space expression','function',5,'p_Incrementar_Num','compYacc.py',97),
  ('function -> Azar Space expression','function',3,'p_Azar','compYacc.py',105),
  ('function -> Producto Space operaciones','function',3,'p_producto','compYacc.py',124),
  ('function -> Potencia Space expression Space expression','function',5,'p_Menos','compYacc.py',130),
  ('function -> Division Space expression Space expression','function',5,'p_Division','compYacc.py',135),
  ('function -> Resto Space expression Space expression','function',5,'p_Resto','compYacc.py',141),
  ('function -> RC Space expression','function',3,'p_RC','compYacc.py',146),
  ('function -> Sen Space expression','function',3,'p_Sen','compYacc.py',151),
  ('function -> Elegir Space LeftSquareBracket operaciones RightSquareBracket','function',5,'p_Elegir','compYacc.py',163),
  ('function -> Borrapantalla','function',1,'p_Borrapantalla','compYacc.py',169),
]
